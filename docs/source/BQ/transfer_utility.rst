==========================================
BQ Settings Convert and Transfer Utilities
==========================================

Introduction
============

The BMS (Battery Management System) needs the ability to store and transfer
settings to the BQ chip (battery management IC on the BMS). Those settings are
stored in the BMS's onboard EEPROM and are loaded onto the BQ chip at system
start up. The BMS itself however, needs a way to get the settings in the
first place. Therefore, included in this code base are utilities for converting
BQ settings into a format that can then be transfered to the BMS as well as
a utility for sending those settings over to the BMS. The intention is to
provide a replicatable process for taking in new settings and updating the
BMS.

Background
==========

The BQ chip is a TI product with the ability to operate under a wide range
of applications. As such, the BQ chip is highly configurable. The majority
of the settings are stored in the BQ chip "RAM" or "Data Memory", however the
BMS software was designed to also support configuration through commands and
subcommands. Each time the system starts up, the BQ chip must have all of its
settings sent over. The BMS handles the logic of transfering the settings to
the BQ chip, however, it still needs to be sent of the settings at least once
to be stored in non-volitile memory (EEPROM). In order to acomplish this,
the settings for the BQ chip must be converted into a form that can then
be sent over CANopen to the BMS as well as be saved into EEPROM. The format of
the data is described in `BQ Setting Representation <https://dev1-bms.readthedocs.io/en/latest/BQ/settings_transfer.html#bq-setting-representation>`_.

The settings originally are stored in a file generated by `bqStudio <https://www.ti.com/tool/BQSTUDIO>`_,
a TI software. This document goes over the utilities that exist for converting
those settings into the format recognized by the BMS, and how to transfer those
settings to the BMS.

Human Process Description
=========================

Users of these utilities will be converting the TI settings file into the BMS
recognized format. From there, additional instruction will be provided on how
the user can transfer those settings to the BMS itself. The TI settings file
contains the settings that will be applied to the RAM of the BQ chip.
Additionally, the settings file itself contains information on each setting
including the type of data, the units, the size in bytes, and how to convert
from a human readable format into the BQ expected format.

The user of the utility does not have to know the intricacies of the
TI settings file, but should be aware of its function. Further information on
how to generate the TI settings file can be found in Section 3 of the
`Easy Configuration of BQ76942, BQ76952 Battery Monitors <https://www.ti.com/lit/an/slua991a/slua991a.pdf?ts=1638132333882&ref_url=https%253A%252F%252Fwww.ti.com%252Fproduct%252FBQ76952>`_ document.
Additionally, documentation on the settings themselves and how they apply
can be found in Section 13.1 of the `BQ76952 Technical Reference Manual <https://www.ti.com/lit/ug/sluuby2a/sluuby2a.pdf?ts=1638144629385&ref_url=https%253A%252F%252Fwww.ti.com%252Fproduct%252FBQ76952>`_.
The selection of the settings values themselves is beyond the scope of this
document, but again, understanding the original of the data can prove useful.

The utilities themselves are Python3 scripts with a command line interface.
Users will interact directly with the scripts in order to execute the
conversion logic as well as the transfer logic. The remainder of this
document will go over the specifics of interacting with these scripts.

Training Module
===============

Target Population
-----------------

Users of the utility are expected to have some level of confidence running
Python scripts and using command line tools. The utilities conform to standard
practices and leverage the package "argparse" so users with a background in
command line usage should be able to use the utilies with ease.

With those considerations in mind, users
